{"version":3,"sources":["corvo.jpg","utils.js","components/Sum.js","components/Stat.js","components/Ability.js","components/CharacterForm.js","components/Character.js","components/Defense.js","components/ItemForm.js","components/Item.js","components/Inventory.js","components/InfoTip.js","components/Offense.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getStringNumber","number","toString","hasModifier","modifiers","undefined","length","Sum","props","style","padding","map","mod","key","name","display","justifyContent","Typography","marginLeft","parseInt","modValue","Stat","label","value","React","useState","anchorEl","setAnchorEl","open","Boolean","className","onClick","event","currentTarget","textAlign","fontWeight","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Ability","inventory","abilityScore","base","total","reduce","prev","Math","floor","source","races","classes","abilities","NewCharacterForm","character","setCharacter","setEdit","initialValues","onSubmit","values","isSubmitting","width","as","TextField","fullWidth","select","race","MenuItem","characterClass","ability","type","Button","Character","filter","target","Defense","itemTypes","AddItem","onAdd","onDelete","handleClose","title","itemModifiers","Dialog","size","DialogTitle","DialogContent","marginTop","variant","render","insert","remove","push","index","alignItems","IconButton","DialogActions","Item","item","setOpen","Card","newItem","modTarget","Inventory","setInventory","setModifiers","handleOpen","onUpdate","itemToUpdate","modifiersToUpdate","concat","filteredInventory","filteredModifiers","sort","itemToAdd","modifiersToAdd","some","newInventory","newModifiers","makeStyles","theme","tooltip","maxWidth","Offense","emptyCharacter","str","dex","con","int","wis","chr","hitPoints","fortitude","reflex","will","cmd","initiative","speed","cmb","loadLocalData","emptyValue","localStorage","getItem","JSON","parse","setItem","stringify","App","localCharacter","localInventory","localModifiers","edit","Container","height","newCharacter","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b4bd085.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/corvo.4da555be.jpg\";","function getStringNumber(number) {\n  if (number > 0) {\n    return \"+\" + number;\n  } else {\n    return number.toString();\n  }\n}\n\nfunction getAbilityModifier(abilityScore) {\n  return getStringNumber(Math.floor((abilityScore - 10) / 2));\n}\n\nconst hasModifier = modifiers => {\n  return modifiers !== undefined && modifiers.length > 0;\n};\n\nexport { getAbilityModifier, getStringNumber, hasModifier };\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { getStringNumber } from \"../utils\";\n\nexport default function Sum(props) {\n  const { modifiers } = props;\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      {modifiers.map(mod => (\n        <div\n          key={mod.name}\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <Typography>{mod.name}</Typography>\n          <Typography style={{ marginLeft: \"1rem\" }}>\n            {getStringNumber(parseInt(mod.modValue))}\n          </Typography>\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Sum from \"./Sum\";\nimport { hasModifier } from \"../utils\";\n\nexport default function Stat(props) {\n  const { label, value, modifiers } = props;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <>\n      <div className=\"stat\" onClick={handleClick}>\n        <div>\n          <header style={{ textAlign: \"center\" }}>{label}</header>\n          <div style={{ fontWeight: \"bold\", textAlign: \"center\" }}>{value}</div>\n        </div>\n      </div>\n      {hasModifier(modifiers) ? (\n        <Popover\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <Sum modifiers={modifiers} />\n        </Popover>\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { getAbilityModifier } from \"../utils\";\nimport Stat from \"./Stat\";\nimport { hasModifier } from \"../utils\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { getStringNumber } from \"../utils\";\n\nexport default function Ability(props) {\n  const { inventory, name, modifiers, base } = props;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const total = modifiers\n    ? parseInt(base) +\n      modifiers.reduce(function(prev, mod) {\n        return prev + parseInt(mod.value);\n      }, 0)\n    : parseInt(base);\n\n  return (\n    <>\n      <div className=\"stat\" onClick={handleClick}>\n        <div>\n          <header style={{ textAlign: \"center\" }}>{name}</header>\n          <div style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\n            {getAbilityModifier(total)}\n          </div>\n        </div>\n      </div>\n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <div style={{ padding: \"1rem\" }}>\n          <div\n            key=\"base\"\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <Typography>Base</Typography>\n            <Typography style={{ marginLeft: \"1rem\" }}>{base}</Typography>\n          </div>\n          {hasModifier(modifiers) ? (\n            <>\n              {modifiers.map(mod => (\n                <div\n                  key={mod.source}\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                >\n                  <Typography>{mod.source}</Typography>\n                  <Typography style={{ marginLeft: \"1rem\" }}>\n                    {getStringNumber(parseInt(mod.value))}\n                  </Typography>\n                </div>\n              ))}\n            </>\n          ) : null}\n        </div>\n      </Popover>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { Button, TextField, MenuItem } from \"@material-ui/core\";\n\nconst races = [\n  \"Aasimar\",\n  \"Dwarf\",\n  \"Elf\",\n  \"Gnome\",\n  \"Half-Elf\",\n  \"Half-Orc\",\n  \"Halfling\",\n  \"Human\",\n];\n\nconst classes = [\n  \"Barbarian\",\n  \"Bard\",\n  \"Cleric\",\n  \"Druid\",\n  \"Fighter\",\n  \"Monk\",\n  \"Oracle\",\n  \"Paladin\",\n  \"Ranger\",\n  \"Rogue\",\n  \"Sorcerer\",\n  \"Summoner\",\n  \"Wizard\",\n];\n\nexport const abilities = [\n  { name: \"str\", label: \"Strength\" },\n  { name: \"dex\", label: \"Dexterity\" },\n  { name: \"con\", label: \"Constitution\" },\n  { name: \"int\", label: \"Intelligence\" },\n  { name: \"wis\", label: \"Wisdom\" },\n  { name: \"chr\", label: \"Charisma\" },\n];\n\nexport default function NewCharacterForm(props) {\n  const { character, setCharacter, setEdit } = props;\n\n  return (\n    <Formik\n      initialValues={character}\n      onSubmit={values => {\n        setCharacter(values);\n        setEdit(false);\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <div style={{ width: \"50%\" }}>\n            <Field as={TextField} fullWidth name=\"name\" label=\"Name\" />\n            <Field as={TextField} name=\"race\" fullWidth label=\"Race\" select>\n              {races.map(race => (\n                <MenuItem key={race} value={race}>\n                  {race}\n                </MenuItem>\n              ))}\n            </Field>\n            <Field\n              as={TextField}\n              name=\"characterClass\"\n              fullWidth\n              label=\"Class\"\n              select\n            >\n              {classes.map(characterClass => (\n                <MenuItem key={characterClass} value={characterClass}>\n                  {characterClass}\n                </MenuItem>\n              ))}\n            </Field>\n            <h2>Ability Scores</h2>\n            {abilities.map(ability => (\n              <Field\n                as={TextField}\n                name={ability.name}\n                type=\"number\"\n                fullWidth\n                label={ability.label}\n              />\n            ))}\n            <h2>Defense</h2>\n            <Field\n              as={TextField}\n              name=\"hitPoints\"\n              type=\"number\"\n              fullWidth\n              label=\"Hit Points\"\n            />\n            <Field\n              as={TextField}\n              name=\"fortitude\"\n              type=\"number\"\n              fullWidth\n              label=\"Fortitude Bonus\"\n            />\n            <Field\n              as={TextField}\n              name=\"reflex\"\n              type=\"number\"\n              fullWidth\n              label=\"Reflex Bonus\"\n            />\n            <Field\n              as={TextField}\n              name=\"will\"\n              type=\"number\"\n              fullWidth\n              label=\"Will Bonus\"\n            />\n            <Field\n              as={TextField}\n              name=\"cmd\"\n              type=\"number\"\n              fullWidth\n              label=\"Combat Maneuver Defense\"\n            />\n\n            <h2>Offense</h2>\n            <Field\n              as={TextField}\n              name=\"initiative\"\n              type=\"number\"\n              fullWidth\n              label=\"Initiative Bonus\"\n            />\n            <Field\n              as={TextField}\n              name=\"speed\"\n              type=\"number\"\n              fullWidth\n              label=\"Base Speed\"\n            />\n            <Field\n              as={TextField}\n              name=\"cmb\"\n              type=\"number\"\n              fullWidth\n              label=\"Combat Manuever Bonus\"\n            />\n            {/* <h2>Skills</h2>\n            <Field as={TextField} type=\"number\" fullWidth label=\"Acrobatics\" />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Appraise\" />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Bluff\" />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Climbing\" />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Diplomacy\" />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Disable Device\"\n            />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Disguise\" />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Escape Artist\"\n            />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Fly\" />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Handle Animal\"\n            />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Heal\" />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Intimidate\" />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Knowledge (Arcana)\"\n            />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Knowledge (Dungeoneering)\"\n            />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Knowledge (Engineering)\"\n            />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Knowledge (Geography)\"\n            />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Knowledge (History)\"\n            />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Knowledge (Local)\"\n            />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Knowledge (Nature)\"\n            />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Knowledge (Nobility)\"\n            />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Knowledge (Planes)\"\n            />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Knowledge (Religion)\"\n            />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Linguistics\" />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Perception\" />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Ride\" />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Sense Motive\"\n            />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Sleight of Hand\"\n            />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Spellcraft\" />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Stealth\" />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Survival\" />\n            <Field as={TextField} type=\"number\" fullWidth label=\"Swim\" />\n            <Field\n              as={TextField}\n              type=\"number\"\n              fullWidth\n              label=\"Use Magic Device\"\n            /> */}\n            <Button type=\"submit\">Submit</Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import React from \"react\";\nimport Ability from \"./Ability\";\nimport { abilities } from \"./CharacterForm\";\n\nexport default function Character(props) {\n  const { character, inventory, modifiers } = props;\n  const { name, race, characterClass } = character;\n\n  // const strengthValue =\n  //   parseInt(strength) +\n  //   inventory\n  //     .filter(item => item.modTarget === \"Strength\")\n  //     .reduce(function(prev, item) {\n  //       return prev + parseInt(item.modValue);\n  //     }, 0);\n\n  return (\n    <section className=\"character\">\n      <span>\n        {name}, {race} {characterClass}\n      </span>\n      <h1>Ability Scores</h1>\n      <div style={{ display: \"flex\" }}>\n        {abilities.map(ability => (\n          <Ability\n            name={ability.label}\n            base={parseInt(character[ability.name])}\n            inventory={inventory}\n            modifiers={modifiers.filter(mod => mod.target === ability.name)}\n          />\n        ))}\n      </div>\n    </section>\n  );\n}\n","import React from \"react\";\nimport Stat from \"./Stat\";\n\nexport default function Defense() {\n  return (\n    <section className=\"defense\">\n      <h1>Defense</h1>\n      <div style={{ display: \"flex\" }}>\n        <Stat label=\"Armor Class\" value={10} />\n        <Stat label=\"Touch AC\" value=\"14\" />\n        <Stat label=\"Flat-Footed\" value=\"10\" />\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <Stat label=\"Fortitude\" value=\"4\" />\n        <Stat label=\"Reflex\" value=\"4\" />\n        <Stat label=\"Will\" value=\"4\" />\n      </div>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  MenuItem,\n  TextField,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Formik, Field, FieldArray, Form } from \"formik\";\nimport { abilities } from \"./CharacterForm\";\n\nconst itemTypes = [\"Armor\", \"Consumable\", \"Tool\", \"Weapon\"];\n\nexport default function AddItem({\n  onAdd,\n  onDelete,\n  handleClose,\n  open,\n  initialValues,\n  modifiers,\n  title,\n}) {\n  const itemModifiers = modifiers.filter(mod => mod.source === title);\n  initialValues.modifiers = itemModifiers;\n\n  return (\n    <div>\n      <Dialog fullWidth open={open} onClose={handleClose} size=\"xs\">\n        <DialogTitle>{title}</DialogTitle>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={values => {\n            handleClose();\n            onAdd(\n              { name: values.name, type: values.type, key: values.name },\n              values.modifiers,\n            );\n          }}\n        >\n          {({ values, isSubmitting }) => (\n            <Form>\n              <DialogContent>\n                <Field as={TextField} fullWidth name=\"name\" label=\"Name\" />\n                <Field\n                  as={TextField}\n                  fullWidth\n                  name=\"type\"\n                  label=\"Item Type\"\n                  select\n                >\n                  {itemTypes.map(type => (\n                    <MenuItem key={type} value={type}>\n                      {type}\n                    </MenuItem>\n                  ))}\n                </Field>\n                <Typography style={{ marginTop: \"32px\" }} variant=\"h6\">\n                  Modifiers\n                </Typography>\n                <FieldArray\n                  name=\"modifiers\"\n                  render={({ insert, remove, push }) => (\n                    <div>\n                      {values.modifiers.length > 0 &&\n                        values.modifiers.map((mod, index) => (\n                          <div\n                            style={{\n                              alignItems: \"baseline\",\n                              display: \"flex\",\n                              justifyContent: \"space-between\",\n                            }}\n                            key={index}\n                          >\n                            <Field\n                              as={TextField}\n                              name={`modifiers.${index}.target`}\n                              label=\"Modifier Target\"\n                              select\n                              style={{ width: \"33%\" }}\n                            >\n                              {abilities.map(ability => (\n                                <MenuItem\n                                  key={ability.name}\n                                  value={ability.name}\n                                >\n                                  {ability.label}\n                                </MenuItem>\n                              ))}\n                            </Field>\n                            <Field\n                              as={TextField}\n                              label=\"Modifier Value\"\n                              name={`modifiers.${index}.value`}\n                              type=\"number\"\n                            />\n                            <IconButton\n                              type=\"button\"\n                              className=\"secondary\"\n                              onClick={() => remove(index)}\n                            >\n                              <CloseIcon />\n                            </IconButton>\n                          </div>\n                        ))}\n                      <Button\n                        type=\"button\"\n                        className=\"secondary\"\n                        onClick={() =>\n                          push({\n                            target: \"\",\n                            value: \"\",\n                            source: values.name,\n                          })\n                        }\n                      >\n                        Add Modifier\n                      </Button>\n                    </div>\n                  )}\n                />\n                {/* <Field\n                  as={TextField}\n                  fullWidth\n                  name=\"modTarget\"\n                  label=\"Modifier Target\"\n                  select\n                >\n                  {abilities.map(ability => (\n                    <MenuItem key={ability.name} value={ability.name}>\n                      {ability.label}\n                    </MenuItem>\n                  ))}\n                </Field>\n                <Field\n                  as={TextField}\n                  fullWidth\n                  name=\"modValue\"\n                  label=\"Modifier Value\"\n                  type=\"number\"\n                /> */}\n              </DialogContent>\n              <DialogActions>\n                {onDelete ? <Button onClick={onDelete}>Delete</Button> : null}\n\n                <Button type=\"submit\">Save</Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport ItemForm from \"./ItemForm\";\n\nexport default function Item({ onAdd, onDelete, item, modifiers }) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleDelete = () => {\n    onDelete(item.name);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <Card className=\"stat\" variant=\"outlined\" onClick={handleOpen}>\n        <span>{item.name}</span>\n      </Card>\n      <ItemForm\n        initialValues={item}\n        handleClose={handleClose}\n        open={open}\n        onAdd={onAdd}\n        onDelete={handleDelete}\n        modifiers={modifiers}\n        title={item.name}\n      />\n    </div>\n  );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ItemForm from \"./ItemForm\";\nimport Item from \"./Item\";\n\nimport { Field, Form, Formik } from \"formik\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useState } from \"react\";\n\nconst modifierTargets = [\n  { label: \"Armor Class\", value: \"ac\" },\n  { label: \"Strength\", value: \"str\" },\n  { label: \"Dexterity\", value: \"dex\" },\n  { label: \"Constitution\", value: \"con\" },\n  { label: \"Intelligence\", value: \"int\" },\n  { label: \"Wisdom\", value: \"wis\" },\n  { label: \"Charisma\", value: \"chr\" },\n];\n\nconst itemTypes = [\n  { label: \"Armor\", value: \"armor\" },\n  { label: \"Melee Weapon\", value: \"melee\" },\n  { label: \"Ranged Weapon\", value: \"ranged\" },\n  { label: \"Misc.\", value: \"misc\" },\n];\n\nconst newItem = {\n  name: \"\",\n  type: \"\",\n  modTarget: \"\",\n  modValue: \"\",\n  modifiers: [],\n};\n\nexport default function Inventory(props) {\n  const [open, setOpen] = useState(false);\n  const { inventory, setInventory, modifiers, setModifiers } = props;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const onAdd = (itemToAdd, modifiersToAdd) => {\n    if (!inventory.some(item => item.name === itemToAdd.name)) {\n      const newInventory = inventory.concat([itemToAdd]);\n      setInventory(newInventory);\n\n      const newModifiers = modifiers.concat(modifiersToAdd);\n      setModifiers(newModifiers);\n    }\n  };\n\n  const onUpdate = (itemToUpdate, modifiersToUpdate) => {\n    setInventory(\n      inventory\n        .filter(item => item.name !== itemToUpdate.name)\n        .concat([itemToUpdate]),\n    );\n    setModifiers(\n      modifiers\n        .filter(mod => mod.source !== itemToUpdate.name)\n        .concat(modifiersToUpdate),\n    );\n  };\n\n  const onDelete = name => {\n    const filteredInventory = inventory.filter(item => item.name !== name);\n    setInventory(filteredInventory);\n\n    const filteredModifiers = modifiers.filter(mod => mod.source !== name);\n    setModifiers(filteredModifiers);\n  };\n\n  return (\n    <section className=\"inventory\">\n      <h1>Inventory</h1>\n      <div style={{ display: \"flex\" }}>\n        {inventory.sort().map(item => (\n          <Item\n            key={item.name}\n            handleClose={handleClose}\n            onDelete={onDelete}\n            onAdd={onUpdate}\n            item={item}\n            modifiers={modifiers}\n          />\n        ))}\n      </div>\n      <Button onClick={handleOpen}>Add New Item</Button>\n      <ItemForm\n        initialValues={newItem}\n        onAdd={onAdd}\n        open={open}\n        handleOpen={handleOpen}\n        handleClose={handleClose}\n        modifiers={modifiers}\n        title=\"New Item\"\n      />\n    </section>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { getStringNumber } from \"../utils\";\n\nconst useStyles = makeStyles(theme => ({\n  tooltip: {\n    maxWidth: \"500px\",\n  },\n}));\n\nexport default function InfoTip(props) {\n  const classes = useStyles();\n  const { modifiers, children } = props;\n\n  const sum = modifiers\n    .map(modifier => modifier.value)\n    .reduce((prev, next) => prev + next);\n\n  const title = (\n    <div style={{ display: \"flex\" }}>\n      {modifiers.map((modifier, index) => (\n        <>\n          <div key={modifier.name} style={{ marginRight: \"0.5rem\" }}>\n            <div style={{ textAlign: \"center\", whiteSpace: \"nowrap\" }}>\n              {modifier.name}\n            </div>\n            <div style={{ textAlign: \"center\" }}>\n              {getStringNumber(modifier.value)}\n            </div>\n          </div>\n          {index + 1 !== modifiers.length && (\n            <div\n              key={`plus${index}`}\n              style={{\n                margin: \"0 1rem\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              +\n            </div>\n          )}\n        </>\n      ))}\n      <div\n        key=\"equals\"\n        style={{\n          margin: \"0 1rem\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        =\n      </div>\n      <div\n        key=\"sum\"\n        style={{\n          margin: \"0 1rem\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {sum}\n      </div>\n    </div>\n  );\n  return (\n    <Tooltip\n      classes={{ tooltip: classes.tooltip }}\n      title={title}\n      children={children}\n    />\n  );\n}\n","import React from \"react\";\nimport InfoTip from \"./InfoTip\";\nimport Stat from \"./Stat\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst daggerAttackModifiers = [\n  {\n    name: \"Base Attack Bonus\",\n    value: 4,\n  },\n  {\n    name: \"Dexterity\",\n    value: 6,\n  },\n  {\n    name: \"Weapon Focus\",\n    value: 1,\n  },\n  {\n    name: \"Two Weapon Fighting\",\n    value: -2,\n  },\n];\n\nexport default function Offense() {\n  return (\n    <section className=\"offense\">\n      <h1>Offense</h1>\n      <div style={{ display: \"flex\" }}>\n        <Stat label=\"Initiative\" value=\"8\" />\n        <Stat label=\"Speed\" value=\"30\" />\n        <Stat label=\"CMB\" value=\"4\" />\n      </div>\n      {/* <h2>Melee</h2>\n      <p>\n        Roll a d20 and add attack bonus. If the attack succeeds roll the damage\n        die and add the damage bonus.\n      </p>\n      <p>\n        If the roll from the d20 is within the critical range, roll to confirm a\n        critical hit.\n      </p>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Melee Weapon</TableCell>\n              <TableCell>Attack Bonus</TableCell>\n              <TableCell>Damage Die</TableCell>\n              <TableCell>Damage Bonus</TableCell>\n              <TableCell>Critical</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell>Dagger</TableCell>\n              <InfoTip modifiers={daggerAttackModifiers}>\n                <TableCell>+9</TableCell>\n              </InfoTip>\n              <TableCell>1d4</TableCell>\n              <TableCell>+8</TableCell>\n              <TableCell>19-20, x2</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer> */}\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Container } from \"@material-ui/core\";\n\nimport \"./App.css\";\nimport ashData from \"./ash.json\";\nimport Character from \"./components/Character\";\nimport Defense from \"./components/Defense\";\nimport Inventory from \"./components/Inventory\";\nimport Offense from \"./components/Offense\";\nimport Portrait from \"./components/Portrait\";\nimport CharacterForm, { abilities } from \"./components/CharacterForm\";\n\nconst emptyCharacter = {\n  name: \"\",\n  race: \"\",\n  characterClass: \"\",\n  str: \"\",\n  dex: \"\",\n  con: \"\",\n  int: \"\",\n  wis: \"\",\n  chr: \"\",\n  hitPoints: \"\",\n  fortitude: \"\",\n  reflex: \"\",\n  will: \"\",\n  cmd: \"\",\n  initiative: \"\",\n  speed: \"\",\n  cmb: \"\",\n};\n\nconst loadLocalData = (key, emptyValue) => {\n  if (localStorage.getItem(key)) {\n    return JSON.parse(localStorage.getItem(key));\n  }\n  localStorage.setItem(key, JSON.stringify(emptyValue));\n  return emptyValue;\n};\n\nfunction App() {\n  const localCharacter = loadLocalData(\"character\", emptyCharacter);\n  const localInventory = loadLocalData(\"inventory\", []);\n  const localModifiers = loadLocalData(\"modifiers\", []);\n\n  const [character, setCharacter] = useState(localCharacter);\n  const [inventory, setInventory] = useState(localInventory);\n  const [modifiers, setModifiers] = useState(localModifiers);\n  const [edit, setEdit] = useState(false);\n\n  const handleEditToggle = () => {\n    setEdit(!edit);\n  };\n\n  const setAllCharacters = newCharacter => {\n    setCharacter(newCharacter);\n    localStorage.setItem(\"character\", JSON.stringify(newCharacter));\n  };\n\n  const setAllModifiers = newModifiers => {\n    setModifiers(newModifiers);\n    localStorage.setItem(\"modifiers\", JSON.stringify(newModifiers));\n  };\n\n  const setAllInventories = newInventory => {\n    setInventory(newInventory);\n    localStorage.setItem(\"inventory\", JSON.stringify(newInventory));\n  };\n\n  return (\n    <Container className=\"App\">\n      <main>\n        <header\n          style={{\n            display: \"flex\",\n            alignItems: \"baseline\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <h1>Character Sheet</h1>\n          <Button onClick={handleEditToggle} style={{ height: \"auto\" }}>\n            {edit ? \"Cancel\" : \"Edit Character\"}\n          </Button>\n        </header>\n        {edit ? (\n          <CharacterForm\n            character={character}\n            setCharacter={setAllCharacters}\n            setEdit={setEdit}\n          />\n        ) : (\n          <div>\n            <Character\n              character={character}\n              inventory={inventory}\n              modifiers={modifiers}\n            />\n            <Defense />\n            <Offense />\n            <Inventory\n              inventory={inventory}\n              setInventory={setAllInventories}\n              modifiers={modifiers}\n              setModifiers={setAllModifiers}\n            />\n          </div>\n        )}\n      </main>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}