{"version":3,"sources":["utils.js","context/AppContext.js","data/skills.js","components/Ability.js","components/Abilities.js","components/Character.js","components/Stat.js","components/Defense.js","data/abilities.js","components/ItemForm.js","components/Item.js","components/Inventory.js","components/Weapon.js","components/Offense.js","tests/Isi.js","tests/Zara.js","App.js","serviceWorker.js","index.js"],"names":["getStringNumber","number","toString","getAbilityModifier","abilityScore","Math","floor","hasModifier","modifiers","undefined","length","initialState","abilities","strength","score","modifier","effects","dexterity","constitution","intelligence","wisdom","charisma","armorClass","character","characterClass","cmb","edit","fortitude","initiative","inventory","name","race","reflex","skills","ability","classSkill","ranks","skillFilter","speed","will","calculateAbility","state","abilityPath","effect","get","push","total","parseInt","reduce","prev","value","set","reducer","items","type","payload","key","map","target","remove","x","localStorage","setItem","JSON","stringify","AppContext","createContext","Provider","AppProvider","children","useReducer","dispatch","Consumer","Ability","props","base","setAbilityScore","React","useState","anchorEl","setAnchorEl","handleClick","event","currentTarget","open","Boolean","className","onClick","style","display","flexDirection","textAlign","textTransform","IconButton","size","fontWeight","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","padding","justifyContent","Typography","marginLeft","source","Abilities","context","useContext","renderAbility","onChange","Character","Stat","label","mod","Defense","itemTypes","AddItem","onAdd","onDelete","handleClose","initialValues","title","itemEffects","filter","Dialog","fullWidth","DialogTitle","onSubmit","values","isSubmitting","DialogContent","as","TextField","autoFocus","select","MenuItem","marginTop","variant","render","insert","index","alignItems","width","Object","Button","DialogActions","Item","item","setOpen","Card","newItem","armorBonus","maxDexBonus","spellFailure","Inventory","handleOpen","sort","Weapon","attacks","criticalRange","attackBonus","damage","range","border","marginBottom","attack","bonus","Offense","Isi","bab","setBab","Container","ToggleButtonGroup","exclusive","newAttack","paddingBottom","ToggleButton","Zara","App","useEffect","storedState","parse","getItem","exact","path","height","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1d603ea.chunk.js","sourcesContent":["function getStringNumber(number) {\r\n  if (number > 0) {\r\n    return \"+\" + number;\r\n  } else {\r\n    return number.toString();\r\n  }\r\n}\r\n\r\nfunction getAbilityModifier(abilityScore) {\r\n  return Math.floor((abilityScore - 10) / 2);\r\n}\r\n\r\nfunction getDisplayAbilityModifier(abilityScore) {\r\n  return getStringNumber(abilityScore);\r\n}\r\n\r\nexport const getAbilityScore = (ability, character, modifiers) => {\r\n  const base = character[ability];\r\n  const modSum = modifiers\r\n    .filter((mod) => mod.target === ability)\r\n    .reduce(function (prev, mod) {\r\n      return prev + parseInt(mod.value);\r\n    }, 0);\r\n\r\n  return getAbilityModifier(base + modSum);\r\n};\r\n\r\nconst hasModifier = (modifiers) => {\r\n  return modifiers !== undefined && modifiers.length > 0;\r\n};\r\n\r\nexport {\r\n  getAbilityModifier,\r\n  getDisplayAbilityModifier,\r\n  getStringNumber,\r\n  hasModifier,\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport get from \"lodash/get\";\r\nimport set from \"lodash/set\";\r\nimport remove from \"lodash/remove\";\r\nimport { skillsArray } from \"../data/skills\";\r\nimport { getAbilityModifier } from \"../utils\";\r\n\r\nconst initialState = {\r\n  abilities: {\r\n    strength: {\r\n      score: 10,\r\n      modifier: 0,\r\n      effects: [],\r\n    },\r\n    dexterity: {\r\n      score: 10,\r\n      modifier: 0,\r\n      effects: [],\r\n    },\r\n    constitution: {\r\n      score: 10,\r\n      modifier: 0,\r\n      effects: [],\r\n    },\r\n    intelligence: {\r\n      score: 10,\r\n      modifier: 0,\r\n      effects: [],\r\n    },\r\n    wisdom: {\r\n      score: 10,\r\n      modifier: 0,\r\n      effects: [],\r\n    },\r\n    charisma: {\r\n      score: 10,\r\n      modifier: 0,\r\n      effects: [],\r\n    },\r\n  },\r\n  armorClass: 0,\r\n  character: {},\r\n  characterClass: \"Fighter\",\r\n  cmb: 0,\r\n  edit: false,\r\n  fortitude: 0,\r\n  initiative: 0,\r\n  inventory: [],\r\n  modifiers: [],\r\n  name: \"My Character\",\r\n  race: \"Human\",\r\n  reflex: 0,\r\n  skills: skillsArray,\r\n  skillFilter: null,\r\n  speed: 30,\r\n  will: 0,\r\n};\r\n\r\nconst calculateAbility = (state, abilityPath, abilityScore, effect) => {\r\n  const { score, effects } = get({ ...state }, abilityPath);\r\n\r\n  if (abilityScore === null) {\r\n    abilityScore = score;\r\n  }\r\n\r\n  if (effect) {\r\n    effects.push(effect);\r\n  }\r\n\r\n  const total = effects\r\n    ? parseInt(abilityScore) +\r\n      effects.reduce(function (prev, effect) {\r\n        return prev + parseInt(effect.value);\r\n      }, 0)\r\n    : parseInt(abilityScore);\r\n\r\n  return set({ ...state }, abilityPath, {\r\n    score: abilityScore,\r\n    modifier: getAbilityModifier(total),\r\n    effects: effects,\r\n  });\r\n};\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n  let items;\r\n  let skills;\r\n\r\n  switch (type) {\r\n    case \"on_input\":\r\n      return set({ ...state }, payload.key, payload.value);\r\n    case \"add_item\":\r\n      items = get({ ...state }, \"inventory\", []);\r\n      items.push(payload.value);\r\n\r\n      // TODO: Functionalize\r\n      // Re-calculate ability modifiers\r\n      if (payload.value.effects) {\r\n        payload.value.effects.map((effect) => {\r\n          calculateAbility(state, `abilities.${effect.target}`, null, effect);\r\n        });\r\n      }\r\n\r\n      return set({ ...state }, \"inventory\", items);\r\n    case \"delete_item\":\r\n      items = get({ ...state }, \"inventory\", []);\r\n      remove(items, (x) => x.name === payload.key); // make this value based?\r\n      // Re-calculate ability modifiers\r\n      return set({ ...state }, \"inventory\", items);\r\n    case \"set_ability_score\":\r\n      return calculateAbility(state, payload.key, payload.value);\r\n    case \"edit_skill\":\r\n      skills = get({ ...state }, \"skills\", []);\r\n      skills[payload.key].ranks = payload.value;\r\n      return set({ ...state }, \"skills\", skills);\r\n    case \"save_data\":\r\n      localStorage.setItem(\"state\", JSON.stringify(state));\r\n      return state;\r\n    case \"import_data\":\r\n      if (payload === null) return initialState;\r\n\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        edit: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst AppContext = createContext(initialState);\r\nconst { Provider } = AppContext;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport const AppProvider = StateProvider;\r\nexport const AppConsumer = AppContext.Consumer;\r\n\r\nexport default AppContext;\r\n","export const acrobatics = {\r\n  name: \"Acrobatics\",\r\n  ability: \"dexterity\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const appraise = {\r\n  name: \"Appraise\",\r\n  ability: \"intelligence\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const bluff = {\r\n  name: \"Bluff\",\r\n  ability: \"charisma\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const climb = {\r\n  name: \"Climb\",\r\n  ability: \"strength\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const craft = {\r\n  name: \"Craft\",\r\n  ability: \"intelligence\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const diplomacy = {\r\n  name: \"Diplomacy\",\r\n  ability: \"charisma\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const disableDevice = {\r\n  name: \"Disable Device\",\r\n  ability: \"dexterity\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const disguise = {\r\n  name: \"Disguise\",\r\n  ability: \"charisma\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const escapeArtist = {\r\n  name: \"Escape Artist\",\r\n  ability: \"dexterity\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const fly = {\r\n  name: \"Fly\",\r\n  ability: \"dexterity\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const handleAnimal = {\r\n  name: \"Handle Animal\",\r\n  ability: \"charisma\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const heal = {\r\n  name: \"Heal\",\r\n  ability: \"wisdom\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const intimidate = {\r\n  name: \"Intimidate\",\r\n  ability: \"charisma\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const knowledgeArcana = {\r\n  name: \"Knowledge (Arcana)\",\r\n  ability: \"intelligence\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const knowledgeDungeoneering = {\r\n  name: \"Knowledge (Dungeoneering)\",\r\n  ability: \"intelligence\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const knowledgeEngineering = {\r\n  name: \"Knowledge (Engineering)\",\r\n  ability: \"intelligence\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const knowledgeGeography = {\r\n  name: \"Knowledge (Geography)\",\r\n  ability: \"intelligence\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const knowledgeHistory = {\r\n  name: \"Knowledge (History)\",\r\n  ability: \"intelligence\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const knowledgeNature = {\r\n  name: \"Knowledge (Nature)\",\r\n  ability: \"intelligence\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const knowledgeNobility = {\r\n  name: \"Knowledge (Nobility)\",\r\n  ability: \"intelligence\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const knowledgePlanes = {\r\n  name: \"Knowledge (Planes)\",\r\n  ability: \"intelligence\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const knowledgeReligion = {\r\n  name: \"Knowledge (Religion)\",\r\n  ability: \"intelligence\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const linguistics = {\r\n  name: \"Linguistics\",\r\n  ability: \"intelligence\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const perception = {\r\n  name: \"Perception\",\r\n  ability: \"wisdom\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const perform = {\r\n  name: \"Perform\",\r\n  ability: \"charisma\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const profession = {\r\n  name: \"Profession\",\r\n  ability: \"wisdom\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const ride = {\r\n  name: \"Ride\",\r\n  ability: \"dexterity\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const senseMotive = {\r\n  name: \"Sense Motive\",\r\n  ability: \"wisdom\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const sleightOfHand = {\r\n  name: \"Sleight of Hand\",\r\n  ability: \"dexterity\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const spellcraft = {\r\n  name: \"Spellcraft\",\r\n  ability: \"intelligence\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const stealth = {\r\n  name: \"Stealth\",\r\n  ability: \"dexterity\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const survival = {\r\n  name: \"Survival\",\r\n  ability: \"wisdom\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const swim = {\r\n  name: \"Swim\",\r\n  ability: \"strength\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\nexport const useMagicDevice = {\r\n  name: \"Use Magic Device\",\r\n  ability: \"charisma\",\r\n  classSkill: false,\r\n  ranks: 0,\r\n};\r\n\r\nexport const skillsArray = [\r\n  acrobatics,\r\n  appraise,\r\n  bluff,\r\n  climb,\r\n  craft,\r\n  diplomacy,\r\n  disableDevice,\r\n  disguise,\r\n  escapeArtist,\r\n  fly,\r\n  handleAnimal,\r\n  heal,\r\n  intimidate,\r\n  knowledgeArcana,\r\n  knowledgeDungeoneering,\r\n  knowledgeEngineering,\r\n  knowledgeGeography,\r\n  knowledgeHistory,\r\n  knowledgeNature,\r\n  knowledgeNobility,\r\n  knowledgePlanes,\r\n  knowledgeReligion,\r\n  linguistics,\r\n  perception,\r\n  perform,\r\n  profession,\r\n  ride,\r\n  senseMotive,\r\n  sleightOfHand,\r\n  spellcraft,\r\n  stealth,\r\n  survival,\r\n  swim,\r\n  useMagicDevice,\r\n];\r\n","import React from \"react\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport { getDisplayAbilityModifier } from \"../utils\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { getStringNumber } from \"../utils\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\n\r\nexport default function Ability(props) {\r\n  const { base, edit, effects, name, modifier, setAbilityScore } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    if (!edit) {\r\n      setAnchorEl(event.currentTarget);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleAdd = () => {\r\n    setAbilityScore(base + 1);\r\n  };\r\n\r\n  const handleSubtract = () => {\r\n    if (base > 0) {\r\n      setAbilityScore(base - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {edit ? (\r\n        <div\r\n          className=\"stat\"\r\n          onClick={handleClick}\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          <header style={{ textAlign: \"center\", textTransform: \"capitalize\" }}>\r\n            {name}\r\n          </header>\r\n          <div style={{ display: \"flex\" }}>\r\n            <IconButton onClick={handleSubtract} size=\"small\">\r\n              <RemoveIcon />\r\n            </IconButton>\r\n            <div style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\r\n              {base}\r\n            </div>\r\n            <IconButton onClick={handleAdd} size=\"small\">\r\n              <AddIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"stat\" onClick={handleClick}>\r\n            <div>\r\n              <header\r\n                style={{ textAlign: \"center\", textTransform: \"capitalize\" }}\r\n              >\r\n                {name}\r\n              </header>\r\n              <div style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\r\n                {edit ? base : getDisplayAbilityModifier(modifier)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Popover\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n            disableRestoreFocus\r\n          >\r\n            <div style={{ padding: \"1rem\" }}>\r\n              <div\r\n                key=\"base\"\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n              >\r\n                <Typography>Base</Typography>\r\n                <Typography style={{ marginLeft: \"1rem\" }}>{base}</Typography>\r\n              </div>\r\n              {effects.length > 0 ? (\r\n                <>\r\n                  {effects.map((effect) => (\r\n                    <div\r\n                      key={effect.source}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Typography>{effect.source}</Typography>\r\n                      <Typography style={{ marginLeft: \"1rem\" }}>\r\n                        {getStringNumber(parseInt(effect.value))}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </>\r\n              ) : null}\r\n            </div>\r\n          </Popover>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport AppContext from \"../context/AppContext\";\r\nimport Ability from \"./Ability\";\r\n\r\nconst Abilities = (props) => {\r\n  const context = useContext(AppContext);\r\n  const { state, dispatch } = context;\r\n  const { abilities, edit } = state;\r\n\r\n  const onChange = (key, value) => {\r\n    dispatch({ type: \"set_ability_score\", payload: { key, value } });\r\n    dispatch({ type: \"save_data\" });\r\n  };\r\n\r\n  const renderAbility = (key) => {\r\n    return (\r\n      <Ability\r\n        edit={edit}\r\n        effects={abilities[key].effects}\r\n        name={key}\r\n        base={abilities[key].score}\r\n        modifier={abilities[key].modifier}\r\n        setAbilityScore={(value) => onChange(`abilities.${key}`, value)}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <h1>Ability Scores</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        {renderAbility(\"strength\")}\r\n        {renderAbility(\"dexterity\")}\r\n        {renderAbility(\"constitution\")}\r\n        {renderAbility(\"intelligence\")}\r\n        {renderAbility(\"wisdom\")}\r\n        {renderAbility(\"charisma\")}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Abilities;\r\n","import React, { useContext } from \"react\";\r\nimport AppContext from \"../context/AppContext\";\r\n\r\nexport default function Character() {\r\n  const context = useContext(AppContext);\r\n  const { state } = context;\r\n  const { name, race, characterClass } = state;\r\n\r\n  return (\r\n    <section className=\"character\">\r\n      <span>\r\n        {name}, {race} {characterClass}\r\n      </span>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { hasModifier } from \"../utils\";\r\n\r\nconst Stat = (props) => {\r\n  const { label, value, modifiers } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"stat\" onClick={handleClick}>\r\n        <div>\r\n          <header style={{ textAlign: \"center\" }}>{label}</header>\r\n          <div style={{ fontWeight: \"bold\", textAlign: \"center\" }}>{value}</div>\r\n        </div>\r\n      </div>\r\n      {hasModifier(modifiers) ? (\r\n        <Popover\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ padding: \"1rem\" }}>\r\n            {hasModifier(modifiers) ? (\r\n              <>\r\n                {modifiers.map((mod) => (\r\n                  <div\r\n                    key={mod.source}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Typography>{mod.label}</Typography>\r\n                    <Typography style={{ marginLeft: \"1rem\" }}>\r\n                      {mod.value}\r\n                    </Typography>\r\n                  </div>\r\n                ))}\r\n              </>\r\n            ) : null}\r\n          </div>\r\n        </Popover>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stat;\r\n","import React, { useContext } from \"react\";\r\nimport AppContext from \"../context/AppContext\";\r\nimport Stat from \"./Stat\";\r\n\r\nconst Defense = () => {\r\n  const context = useContext(AppContext);\r\n  const { state } = context;\r\n  const { armorClass, fortitude, reflex, will } = state;\r\n\r\n  return (\r\n    <section className=\"defense\">\r\n      <h1>Defense</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        <Stat label=\"Armor Class\" value={armorClass} />\r\n        <Stat label=\"Touch AC\" value=\"14\" />\r\n        <Stat label=\"Flat-Footed\" value=\"10\" />\r\n      </div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <Stat label=\"Fortitude\" value={fortitude} />\r\n        <Stat label=\"Reflex\" value={reflex} />\r\n        <Stat label=\"Will\" value={will} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Defense;\r\n","export const strength = {\r\n  key: \"strength\",\r\n  label: \"Strength\",\r\n};\r\nexport const dexterity = {\r\n  key: \"dexterity\",\r\n  label: \"Dexterity\",\r\n};\r\nexport const constitution = {\r\n  key: \"constitution\",\r\n  label: \"Constitution\",\r\n};\r\nexport const intelligence = {\r\n  key: \"intelligence\",\r\n  label: \"Intelligence\",\r\n};\r\nexport const wisdom = {\r\n  key: \"wisdom\",\r\n  label: \"Wisdom\",\r\n};\r\nexport const charisma = {\r\n  key: \"charisma\",\r\n  label: \"Charisma\",\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Formik, Field, FieldArray, Form } from \"formik\";\r\nimport * as abilities from \"../data/abilities\";\r\n\r\nconst itemTypes = [\"Accessory\", \"Armor\", \"Consumable\", \"Tool\", \"Weapon\"];\r\n\r\nexport default function AddItem({\r\n  onAdd,\r\n  onDelete,\r\n  handleClose,\r\n  open,\r\n  initialValues,\r\n  effects,\r\n  title,\r\n}) {\r\n  const itemEffects = effects.filter((effect) => effect.source === title);\r\n  initialValues.effects = itemEffects;\r\n\r\n  const armorFields = () => {\r\n    return (\r\n      <>\r\n        <Field\r\n          as={TextField}\r\n          fullWidth\r\n          label=\"Armor Bonus\"\r\n          name=\"armorBonus\"\r\n          type=\"number\"\r\n        />\r\n        <Field\r\n          as={TextField}\r\n          fullWidth\r\n          label=\"Maximum Dexterity Bonus\"\r\n          name=\"maxDexBonus\"\r\n          type=\"number\"\r\n        />\r\n        <Field\r\n          as={TextField}\r\n          fullWidth\r\n          label=\"Arcane Spell Failure Chance\"\r\n          name=\"spellFailure\"\r\n          type=\"number\"\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullWidth open={open} onClose={handleClose} size=\"xs\">\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={(values) => {\r\n            handleClose();\r\n            onAdd(`inventory.${values.name}`, { ...values });\r\n          }}\r\n        >\r\n          {({ values, isSubmitting }) => (\r\n            <Form>\r\n              <DialogContent>\r\n                <Field\r\n                  as={TextField}\r\n                  autoFocus\r\n                  fullWidth\r\n                  name=\"name\"\r\n                  label=\"Name\"\r\n                />\r\n                <Field\r\n                  as={TextField}\r\n                  fullWidth\r\n                  name=\"type\"\r\n                  label=\"Item Type\"\r\n                  select\r\n                >\r\n                  {itemTypes.map((type) => (\r\n                    <MenuItem key={type} value={type}>\r\n                      {type}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Field>\r\n                {values.type === \"Armor\" ? armorFields() : null}\r\n                <Typography style={{ marginTop: \"32px\" }} variant=\"h6\">\r\n                  Effects\r\n                </Typography>\r\n                <FieldArray\r\n                  name=\"effects\"\r\n                  render={({ insert, remove, push }) => (\r\n                    <div>\r\n                      {values.effects.length > 0 &&\r\n                        values.effects.map((mod, index) => (\r\n                          <div\r\n                            style={{\r\n                              alignItems: \"baseline\",\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                            }}\r\n                            key={index}\r\n                          >\r\n                            <Field\r\n                              as={TextField}\r\n                              name={`effects.${index}.target`}\r\n                              label=\"Effect Target\"\r\n                              select\r\n                              style={{ width: \"33%\" }}\r\n                            >\r\n                              {Object.values(abilities).map((ability) => (\r\n                                <MenuItem key={ability.key} value={ability.key}>\r\n                                  {ability.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </Field>\r\n                            <Field\r\n                              as={TextField}\r\n                              label=\"Effect Value\"\r\n                              name={`effects.${index}.value`}\r\n                              type=\"number\"\r\n                            />\r\n                            <IconButton\r\n                              type=\"button\"\r\n                              className=\"secondary\"\r\n                              onClick={() => remove(index)}\r\n                            >\r\n                              <CloseIcon />\r\n                            </IconButton>\r\n                          </div>\r\n                        ))}\r\n                      <Button\r\n                        type=\"button\"\r\n                        className=\"secondary\"\r\n                        onClick={() =>\r\n                          push({\r\n                            target: \"\",\r\n                            value: \"\",\r\n                            source: values.name,\r\n                          })\r\n                        }\r\n                      >\r\n                        Add Effect\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                {onDelete ? <Button onClick={onDelete}>Delete</Button> : null}\r\n\r\n                <Button type=\"submit\">Save</Button>\r\n              </DialogActions>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport ItemForm from \"./ItemForm\";\r\n\r\nexport default function Item({ onAdd, onDelete, item, effects }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDelete = () => {\r\n    onDelete(item.name, item);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"stat\" variant=\"outlined\" onClick={handleOpen}>\r\n        <span>{item.name}</span>\r\n      </Card>\r\n      <ItemForm\r\n        initialValues={item}\r\n        handleClose={handleClose}\r\n        open={open}\r\n        onAdd={onAdd}\r\n        onDelete={handleDelete}\r\n        effects={effects}\r\n        title={item.name}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport AppContext from \"../context/AppContext\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ItemForm from \"./ItemForm\";\r\nimport Item from \"./Item\";\r\n\r\nconst newItem = {\r\n  name: \"\",\r\n  type: \"\",\r\n  armorBonus: \"\",\r\n  maxDexBonus: \"\",\r\n  spellFailure: \"\",\r\n  effects: [],\r\n};\r\n\r\nexport default function Inventory(props) {\r\n  const context = useContext(AppContext);\r\n  const { state, dispatch } = context;\r\n  const { inventory } = state;\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onAdd = (key, value) => {\r\n    dispatch({ type: \"add_item\", payload: { key, value } });\r\n    dispatch({ type: \"save_data\" });\r\n  };\r\n\r\n  // const onUpdate = (itemToUpdate, modifiersToUpdate) => {\r\n  //   setInventory(\r\n  //     inventory\r\n  //       .filter((item) => item.name !== itemToUpdate.name)\r\n  //       .concat([itemToUpdate]),\r\n  //   );\r\n  //   setModifiers(\r\n  //     modifiers\r\n  //       .filter((mod) => mod.source !== itemToUpdate.name)\r\n  //       .concat(modifiersToUpdate),\r\n  //   );\r\n  // };\r\n\r\n  const onDelete = (key, value) => {\r\n    dispatch({ type: \"delete_item\", payload: { key, value } });\r\n    dispatch({ type: \"save_data\" });\r\n  };\r\n\r\n  return (\r\n    <section className=\"inventory\">\r\n      <h1>Inventory</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        {inventory.sort().map((item) => (\r\n          <Item\r\n            key={item.name}\r\n            handleClose={handleClose}\r\n            onDelete={onDelete}\r\n            // onAdd={onUpdate}\r\n            onAdd={onAdd}\r\n            item={item}\r\n            effects={item.effects}\r\n          />\r\n        ))}\r\n      </div>\r\n      <Button onClick={handleOpen}>Add New Item</Button>\r\n      <ItemForm\r\n        initialValues={newItem}\r\n        onAdd={onAdd}\r\n        open={open}\r\n        handleOpen={handleOpen}\r\n        handleClose={handleClose}\r\n        effects={[]}\r\n        title=\"New Item\"\r\n      />\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Stat from \"./Stat\";\r\nimport { getStringNumber } from \"../utils\";\r\n\r\nconst Weapon = (props) => {\r\n  // const { attackBonus, criticalRange, damage, name } = props;\r\n  const { name, attacks, attackBonus, damage, criticalRange, range } = props;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        border: \"1px solid lightgray\",\r\n        padding: \"1rem\",\r\n        marginBottom: \"1rem\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <h4>{name}</h4>\r\n        <Stat label=\"Critical Range\" value={criticalRange} />\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        {attacks.map((attack) => (\r\n          <div\r\n            style={{\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <span>{attack.name}</span>\r\n            <Stat label=\"Attack Bonus\" value={getStringNumber(attack.bonus)} />\r\n            <Stat label=\"Damage\" value={attack.damage} />\r\n            {attack.range && <Stat label=\"Range\" value={attack?.range} />}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weapon;\r\n","import React, { useContext } from \"react\";\r\nimport AppContext from \"../context/AppContext\";\r\nimport Stat from \"./Stat\";\r\nimport Weapon from \"./Weapon\";\r\n\r\nexport default function Offense() {\r\n  const context = useContext(AppContext);\r\n  const { state } = context;\r\n  const { initiative, speed, cmb } = state;\r\n  return (\r\n    <section className=\"offense\">\r\n      <h1>Offense</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        <Stat label=\"Initiative\" value={initiative} />\r\n        <Stat label=\"Speed\" value={speed} />\r\n        <Stat label=\"CMB\" value={cmb} />\r\n      </div>\r\n      {/* <h1>Attacks</h1>\r\n      <Weapon\r\n        attackBonus=\"+4\"\r\n        criticalRange=\"x2\"\r\n        damageBonus={1}\r\n        damageDie=\"1d3\"\r\n        damageType=\"Bludgeoning\"\r\n        name=\"Unarmed Strike\"\r\n      />\r\n      <Weapon\r\n        attackBonus=\"+10\"\r\n        criticalRange=\"19-20/x2\"\r\n        damageDie=\"1d8\"\r\n        damageBonus={1}\r\n        damageType=\"Slashing\"\r\n        name=\"Longsword +1\"\r\n      /> */}\r\n    </section>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Weapon from \"../components/Weapon\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\n\r\nconst Isi = () => {\r\n  const [bab, setBab] = useState(6);\r\n\r\n  const handleAttack = (event, newAttack) => {\r\n    setBab(newAttack);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Isi</h1>\r\n      <ToggleButtonGroup\r\n        exclusive\r\n        onChange={handleAttack}\r\n        style={{ paddingBottom: \"1rem\" }}\r\n        value={bab}\r\n      >\r\n        <ToggleButton value={6}>1st Attack</ToggleButton>\r\n        <ToggleButton value={1}>2nd Attack</ToggleButton>\r\n      </ToggleButtonGroup>\r\n      <Weapon\r\n        name=\"Holy Longsword +2\"\r\n        attacks={[\r\n          {\r\n            name: \"One Handed\",\r\n            bonus: bab + 7,\r\n            damage: \"2d8 + 5\",\r\n          },\r\n          {\r\n            name: \"Two Handed\",\r\n            bonus: bab + 7,\r\n            damage: \"2d8 + 7\",\r\n          },\r\n          {\r\n            name: \"Power Attack\",\r\n            bonus: bab + 5,\r\n            damage: \"2d8 + 11\",\r\n          },\r\n          {\r\n            name: \"Two Handed Power Attack\",\r\n            bonus: bab + 5,\r\n            damage: \"2d8 + 13\",\r\n          },\r\n        ]}\r\n        criticalRange=\"19-20/x2\"\r\n      />\r\n      <Weapon\r\n        name=\"Holy Shield +2\"\r\n        criticalRange=\"x2\"\r\n        attacks={[\r\n          {\r\n            name: \"Throw\",\r\n            bonus: bab - 2,\r\n            damage: \"1d6 + 2\",\r\n            range: \"20 ft.\",\r\n          },\r\n        ]}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Isi;\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Weapon from \"../components/Weapon\";\r\n\r\nconst Zara = () => {\r\n  return (\r\n    <Container>\r\n      <h1>Zara</h1>\r\n      <Weapon\r\n        name=\"Light Crossbow\"\r\n        criticalRange=\"19-20/x2\"\r\n        attacks={[{ name: \"Shoot\", bonus: 5, damage: \"1d8\", range: \"80 ft.\" }]}\r\n      />\r\n      <Weapon\r\n        name=\"Dagger (Borrowed from Ash)\"\r\n        criticalRange=\"19-20/x2\"\r\n        attacks={[\r\n          { name: \"Attack\", bonus: 0, damage: \"1d4\" },\r\n          { name: \"Throw\", bonus: 0, damage: \"1d4\", range: \"10 ft.\" },\r\n        ]}\r\n        attackBonus=\"+0\"\r\n        damage=\"1d4\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Zara;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Button, Container } from \"@material-ui/core\";\r\n\r\nimport \"./App.css\";\r\nimport AppContext from \"./context/AppContext\";\r\nimport Abilities from \"./components/Abilities\";\r\nimport Character from \"./components/Character\";\r\nimport Defense from \"./components/Defense\";\r\nimport Inventory from \"./components/Inventory\";\r\nimport Offense from \"./components/Offense\";\r\nimport Skills from \"./components/Skills\";\r\n\r\nimport Isi from \"./tests/Isi\";\r\nimport Zara from \"./tests/Zara\";\r\n\r\nconst App = () => {\r\n  const context = useContext(AppContext);\r\n  const { state, dispatch } = context;\r\n  const { edit } = state;\r\n\r\n  useEffect(() => {\r\n    const storedState = JSON.parse(localStorage.getItem(\"state\"));\r\n    dispatch({ type: \"import_data\", payload: storedState });\r\n  }, [dispatch]);\r\n\r\n  const handleEditToggle = () => {\r\n    dispatch({ type: \"on_input\", payload: { key: \"edit\", value: !edit } });\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Container className=\"App\">\r\n            <main>\r\n              <header\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"baseline\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <h1>Character Sheet</h1>\r\n                <Button onClick={handleEditToggle} style={{ height: \"auto\" }}>\r\n                  {edit ? \"View Character\" : \"Edit Character\"}\r\n                </Button>\r\n              </header>\r\n              <div>\r\n                <Character />\r\n                <Abilities />\r\n                <Defense />\r\n                <Offense />\r\n                <Inventory />\r\n                {/* <Skills /> */}\r\n              </div>\r\n            </main>\r\n          </Container>\r\n        </Route>\r\n        <Route path=\"/isi\">\r\n          <Isi />\r\n        </Route>\r\n        <Route path=\"/zara\">\r\n          <Zara />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context/AppContext\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}