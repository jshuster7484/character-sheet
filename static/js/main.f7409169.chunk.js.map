{"version":3,"sources":["corvo.jpg","utils.js","components/Stat.js","components/Ability.js","components/CharacterForm.js","components/Character.js","components/ArmorClass.js","components/Defense.js","components/ItemForm.js","components/Item.js","components/Inventory.js","components/InfoTip.js","components/Weapon.js","components/Offense.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getStringNumber","number","toString","getAbilityModifier","abilityScore","Math","floor","getAbilityScore","ability","character","modifiers","filter","mod","target","reduce","prev","parseInt","value","hasModifier","undefined","length","Stat","props","base","label","React","useState","anchorEl","setAnchorEl","open","Boolean","className","onClick","event","currentTarget","style","textAlign","fontWeight","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","padding","map","key","source","display","justifyContent","Typography","marginLeft","Ability","inventory","name","total","races","classes","abilities","NewCharacterForm","setCharacter","setEdit","initialValues","onSubmit","values","isSubmitting","width","as","TextField","fullWidth","select","race","MenuItem","characterClass","type","Button","Character","ArmorClass","initial","items","item","armorBonus","mods","concat","sum","Defense","fortitude","reflex","will","itemTypes","AddItem","onAdd","onDelete","handleClose","title","itemModifiers","Dialog","size","DialogTitle","DialogContent","marginTop","variant","render","insert","remove","push","index","alignItems","IconButton","DialogActions","Item","setOpen","Card","newItem","maxDexBonus","spellFailure","Inventory","setInventory","setModifiers","handleOpen","onUpdate","itemToUpdate","modifiersToUpdate","filteredInventory","filteredModifiers","sort","itemToAdd","modifiersToAdd","some","newInventory","newModifiers","makeStyles","theme","tooltip","maxWidth","Weapon","attackBonus","criticalRange","damageDie","damageBonus","damageType","border","marginBottom","Offense","initiative","speed","cmb","emptyCharacter","str","dex","con","int","wis","chr","hitPoints","cmd","loadLocalData","emptyValue","localStorage","getItem","JSON","parse","setItem","stringify","App","localCharacter","localInventory","localModifiers","edit","Container","height","newCharacter","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7409169.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/corvo.4da555be.jpg\";","function getStringNumber(number) {\r\n  if (number > 0) {\r\n    return \"+\" + number;\r\n  } else {\r\n    return number.toString();\r\n  }\r\n}\r\n\r\nfunction getAbilityModifier(abilityScore) {\r\n  return getStringNumber(Math.floor((abilityScore - 10) / 2));\r\n}\r\n\r\nexport const getAbilityScore = (ability, character, modifiers) => {\r\n  const base = character[ability];\r\n  const modSum = modifiers\r\n    .filter(mod => mod.target === ability)\r\n    .reduce(function(prev, mod) {\r\n      return prev + parseInt(mod.value);\r\n    }, 0);\r\n\r\n  return getAbilityModifier(base + modSum);\r\n};\r\n\r\nconst hasModifier = modifiers => {\r\n  return modifiers !== undefined && modifiers.length > 0;\r\n};\r\n\r\nexport { getAbilityModifier, getStringNumber, hasModifier };\r\n","import React from \"react\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { getStringNumber, hasModifier } from \"../utils\";\r\n\r\nconst Stat = props => {\r\n  const { base, label, value, modifiers } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"stat\" onClick={handleClick}>\r\n        <div>\r\n          <header style={{ textAlign: \"center\" }}>{label}</header>\r\n          <div style={{ fontWeight: \"bold\", textAlign: \"center\" }}>{value}</div>\r\n        </div>\r\n      </div>\r\n      {hasModifier(modifiers) ? (\r\n        <Popover\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ padding: \"1rem\" }}>\r\n            {hasModifier(modifiers) ? (\r\n              <>\r\n                {modifiers.map(mod => (\r\n                  <div\r\n                    key={mod.source}\r\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Typography>{mod.label}</Typography>\r\n                    <Typography style={{ marginLeft: \"1rem\" }}>\r\n                      {mod.value}\r\n                    </Typography>\r\n                  </div>\r\n                ))}\r\n              </>\r\n            ) : null}\r\n          </div>\r\n        </Popover>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stat;\r\n","import React from \"react\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport { getAbilityModifier } from \"../utils\";\r\nimport Stat from \"./Stat\";\r\nimport { hasModifier } from \"../utils\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { getStringNumber } from \"../utils\";\r\n\r\nexport default function Ability(props) {\r\n  const { inventory, name, modifiers, base } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const total = modifiers\r\n    ? parseInt(base) +\r\n      modifiers.reduce(function(prev, mod) {\r\n        return prev + parseInt(mod.value);\r\n      }, 0)\r\n    : parseInt(base);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"stat\" onClick={handleClick}>\r\n        <div>\r\n          <header style={{ textAlign: \"center\" }}>{name}</header>\r\n          <div style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\r\n            {getAbilityModifier(total)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Popover\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <div style={{ padding: \"1rem\" }}>\r\n          <div\r\n            key=\"base\"\r\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n          >\r\n            <Typography>Base</Typography>\r\n            <Typography style={{ marginLeft: \"1rem\" }}>{base}</Typography>\r\n          </div>\r\n          {hasModifier(modifiers) ? (\r\n            <>\r\n              {modifiers.map(mod => (\r\n                <div\r\n                  key={mod.source}\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <Typography>{mod.source}</Typography>\r\n                  <Typography style={{ marginLeft: \"1rem\" }}>\r\n                    {getStringNumber(parseInt(mod.value))}\r\n                  </Typography>\r\n                </div>\r\n              ))}\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport { Button, TextField, MenuItem } from \"@material-ui/core\";\r\n\r\nconst races = [\r\n  \"Aasimar\",\r\n  \"Dwarf\",\r\n  \"Elf\",\r\n  \"Gnome\",\r\n  \"Half-Elf\",\r\n  \"Half-Orc\",\r\n  \"Halfling\",\r\n  \"Human\",\r\n];\r\n\r\nconst classes = [\r\n  \"Barbarian\",\r\n  \"Bard\",\r\n  \"Cleric\",\r\n  \"Druid\",\r\n  \"Fighter\",\r\n  \"Monk\",\r\n  \"Oracle\",\r\n  \"Paladin\",\r\n  \"Ranger\",\r\n  \"Rogue\",\r\n  \"Sorcerer\",\r\n  \"Summoner\",\r\n  \"Wizard\",\r\n];\r\n\r\nexport const abilities = [\r\n  { name: \"str\", label: \"Strength\" },\r\n  { name: \"dex\", label: \"Dexterity\" },\r\n  { name: \"con\", label: \"Constitution\" },\r\n  { name: \"int\", label: \"Intelligence\" },\r\n  { name: \"wis\", label: \"Wisdom\" },\r\n  { name: \"chr\", label: \"Charisma\" },\r\n];\r\n\r\nexport default function NewCharacterForm(props) {\r\n  const { character, setCharacter, setEdit } = props;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={character}\r\n      onSubmit={values => {\r\n        setCharacter(values);\r\n        setEdit(false);\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n          <div style={{ width: \"50%\" }}>\r\n            <Field as={TextField} fullWidth name=\"name\" label=\"Name\" />\r\n            <Field as={TextField} name=\"race\" fullWidth label=\"Race\" select>\r\n              {races.map(race => (\r\n                <MenuItem key={race} value={race}>\r\n                  {race}\r\n                </MenuItem>\r\n              ))}\r\n            </Field>\r\n            <Field\r\n              as={TextField}\r\n              name=\"characterClass\"\r\n              fullWidth\r\n              label=\"Class\"\r\n              select\r\n            >\r\n              {classes.map(characterClass => (\r\n                <MenuItem key={characterClass} value={characterClass}>\r\n                  {characterClass}\r\n                </MenuItem>\r\n              ))}\r\n            </Field>\r\n            <h2>Ability Scores</h2>\r\n            {abilities.map(ability => (\r\n              <Field\r\n                as={TextField}\r\n                name={ability.name}\r\n                type=\"number\"\r\n                fullWidth\r\n                label={ability.label}\r\n              />\r\n            ))}\r\n            <h2>Defense</h2>\r\n            <Field\r\n              as={TextField}\r\n              name=\"hitPoints\"\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Hit Points\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              name=\"fortitude\"\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Fortitude Bonus\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              name=\"reflex\"\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Reflex Bonus\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              name=\"will\"\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Will Bonus\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              name=\"cmd\"\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Combat Maneuver Defense\"\r\n            />\r\n\r\n            <h2>Offense</h2>\r\n            <Field\r\n              as={TextField}\r\n              name=\"initiative\"\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Initiative Bonus\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              name=\"speed\"\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Base Speed\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              name=\"cmb\"\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Combat Manuever Bonus\"\r\n            />\r\n            {/* <h2>Skills</h2>\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Acrobatics\" />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Appraise\" />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Bluff\" />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Climbing\" />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Diplomacy\" />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Disable Device\"\r\n            />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Disguise\" />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Escape Artist\"\r\n            />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Fly\" />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Handle Animal\"\r\n            />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Heal\" />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Intimidate\" />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Knowledge (Arcana)\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Knowledge (Dungeoneering)\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Knowledge (Engineering)\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Knowledge (Geography)\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Knowledge (History)\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Knowledge (Local)\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Knowledge (Nature)\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Knowledge (Nobility)\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Knowledge (Planes)\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Knowledge (Religion)\"\r\n            />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Linguistics\" />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Perception\" />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Ride\" />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Sense Motive\"\r\n            />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Sleight of Hand\"\r\n            />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Spellcraft\" />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Stealth\" />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Survival\" />\r\n            <Field as={TextField} type=\"number\" fullWidth label=\"Swim\" />\r\n            <Field\r\n              as={TextField}\r\n              type=\"number\"\r\n              fullWidth\r\n              label=\"Use Magic Device\"\r\n            /> */}\r\n            <Button type=\"submit\">Submit</Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Ability from \"./Ability\";\r\nimport { abilities } from \"./CharacterForm\";\r\n\r\nexport default function Character(props) {\r\n  const { character, inventory, modifiers } = props;\r\n  const { name, race, characterClass } = character;\r\n\r\n  // const strengthValue =\r\n  //   parseInt(strength) +\r\n  //   inventory\r\n  //     .filter(item => item.modTarget === \"Strength\")\r\n  //     .reduce(function(prev, item) {\r\n  //       return prev + parseInt(item.modValue);\r\n  //     }, 0);\r\n\r\n  return (\r\n    <section className=\"character\">\r\n      <span>\r\n        {name}, {race} {characterClass}\r\n      </span>\r\n      <h1>Ability Scores</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        {abilities.map(ability => (\r\n          <Ability\r\n            name={ability.label}\r\n            base={parseInt(character[ability.name])}\r\n            inventory={inventory}\r\n            modifiers={modifiers.filter(mod => mod.target === ability.name)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Stat from \"./Stat\";\r\nimport { getAbilityScore, getStringNumber } from \"../utils\";\r\n\r\nconst ArmorClass = props => {\r\n  const { character, inventory, modifiers } = props;\r\n\r\n  const initial = [\r\n    { label: \"Base\", value: 10 },\r\n    {\r\n      label: \"Dexterity\",\r\n      value: getAbilityScore(\"dex\", character, modifiers),\r\n    },\r\n  ];\r\n\r\n  const items = inventory\r\n    .filter(item => item.armorBonus > 0)\r\n    .map(item => {\r\n      return { label: item.name, value: getStringNumber(item.armorBonus) };\r\n    });\r\n\r\n  const mods = initial.concat(items);\r\n\r\n  const sum = mods.reduce(function(prev, mod) {\r\n    return prev + parseInt(mod.value);\r\n  }, 0);\r\n\r\n  return <Stat label=\"Armor Class\" modifiers={mods} value={sum} />;\r\n};\r\n\r\nexport default ArmorClass;\r\n","import React from \"react\";\r\nimport Stat from \"./Stat\";\r\nimport ArmorClass from \"./ArmorClass\";\r\n\r\nconst Defense = ({ character, inventory, modifiers }) => {\r\n  return (\r\n    <section className=\"defense\">\r\n      <h1>Defense</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        <ArmorClass\r\n          character={character}\r\n          inventory={inventory}\r\n          modifiers={modifiers}\r\n        />\r\n        <Stat label=\"Touch AC\" value=\"14\" />\r\n        <Stat label=\"Flat-Footed\" value=\"10\" />\r\n      </div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <Stat label=\"Fortitude\" value={character.fortitude} />\r\n        <Stat label=\"Reflex\" value={character.reflex} />\r\n        <Stat label=\"Will\" value={character.will} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Defense;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Formik, Field, FieldArray, Form } from \"formik\";\r\nimport { abilities } from \"./CharacterForm\";\r\n\r\nconst itemTypes = [\"Accessory\", \"Armor\", \"Consumable\", \"Tool\", \"Weapon\"];\r\n\r\nexport default function AddItem({\r\n  onAdd,\r\n  onDelete,\r\n  handleClose,\r\n  open,\r\n  initialValues,\r\n  modifiers,\r\n  title,\r\n}) {\r\n  const itemModifiers = modifiers.filter(mod => mod.source === title);\r\n  initialValues.modifiers = itemModifiers;\r\n\r\n  const armorFields = () => {\r\n    return (\r\n      <>\r\n        <Field\r\n          as={TextField}\r\n          fullWidth\r\n          label=\"Armor Bonus\"\r\n          name=\"armorBonus\"\r\n          type=\"number\"\r\n        />\r\n        <Field\r\n          as={TextField}\r\n          fullWidth\r\n          label=\"Maximum Dexterity Bonus\"\r\n          name=\"maxDexBonus\"\r\n          type=\"number\"\r\n        />\r\n        <Field\r\n          as={TextField}\r\n          fullWidth\r\n          label=\"Arcane Spell Failure Chance\"\r\n          name=\"spellFailure\"\r\n          type=\"number\"\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullWidth open={open} onClose={handleClose} size=\"xs\">\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={values => {\r\n            handleClose();\r\n            onAdd({ ...values }, values.modifiers);\r\n          }}\r\n        >\r\n          {({ values, isSubmitting }) => (\r\n            <Form>\r\n              <DialogContent>\r\n                <Field as={TextField} fullWidth name=\"name\" label=\"Name\" />\r\n                <Field\r\n                  as={TextField}\r\n                  fullWidth\r\n                  name=\"type\"\r\n                  label=\"Item Type\"\r\n                  select\r\n                >\r\n                  {itemTypes.map(type => (\r\n                    <MenuItem key={type} value={type}>\r\n                      {type}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Field>\r\n                {values.type === \"Armor\" ? armorFields() : null}\r\n                <Typography style={{ marginTop: \"32px\" }} variant=\"h6\">\r\n                  Modifiers\r\n                </Typography>\r\n                <FieldArray\r\n                  name=\"modifiers\"\r\n                  render={({ insert, remove, push }) => (\r\n                    <div>\r\n                      {values.modifiers.length > 0 &&\r\n                        values.modifiers.map((mod, index) => (\r\n                          <div\r\n                            style={{\r\n                              alignItems: \"baseline\",\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                            }}\r\n                            key={index}\r\n                          >\r\n                            <Field\r\n                              as={TextField}\r\n                              name={`modifiers.${index}.target`}\r\n                              label=\"Modifier Target\"\r\n                              select\r\n                              style={{ width: \"33%\" }}\r\n                            >\r\n                              {abilities.map(ability => (\r\n                                <MenuItem\r\n                                  key={ability.name}\r\n                                  value={ability.name}\r\n                                >\r\n                                  {ability.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </Field>\r\n                            <Field\r\n                              as={TextField}\r\n                              label=\"Modifier Value\"\r\n                              name={`modifiers.${index}.value`}\r\n                              type=\"number\"\r\n                            />\r\n                            <IconButton\r\n                              type=\"button\"\r\n                              className=\"secondary\"\r\n                              onClick={() => remove(index)}\r\n                            >\r\n                              <CloseIcon />\r\n                            </IconButton>\r\n                          </div>\r\n                        ))}\r\n                      <Button\r\n                        type=\"button\"\r\n                        className=\"secondary\"\r\n                        onClick={() =>\r\n                          push({\r\n                            target: \"\",\r\n                            value: \"\",\r\n                            source: values.name,\r\n                          })\r\n                        }\r\n                      >\r\n                        Add Modifier\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                />\r\n                {/* <Field\r\n                  as={TextField}\r\n                  fullWidth\r\n                  name=\"modTarget\"\r\n                  label=\"Modifier Target\"\r\n                  select\r\n                >\r\n                  {abilities.map(ability => (\r\n                    <MenuItem key={ability.name} value={ability.name}>\r\n                      {ability.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Field>\r\n                <Field\r\n                  as={TextField}\r\n                  fullWidth\r\n                  name=\"modValue\"\r\n                  label=\"Modifier Value\"\r\n                  type=\"number\"\r\n                /> */}\r\n              </DialogContent>\r\n              <DialogActions>\r\n                {onDelete ? <Button onClick={onDelete}>Delete</Button> : null}\r\n\r\n                <Button type=\"submit\">Save</Button>\r\n              </DialogActions>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport ItemForm from \"./ItemForm\";\r\n\r\nexport default function Item({ onAdd, onDelete, item, modifiers }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDelete = () => {\r\n    onDelete(item.name);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"stat\" variant=\"outlined\" onClick={handleOpen}>\r\n        <span>{item.name}</span>\r\n      </Card>\r\n      <ItemForm\r\n        initialValues={item}\r\n        handleClose={handleClose}\r\n        open={open}\r\n        onAdd={onAdd}\r\n        onDelete={handleDelete}\r\n        modifiers={modifiers}\r\n        title={item.name}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ItemForm from \"./ItemForm\";\r\nimport Item from \"./Item\";\r\n\r\nimport { Field, Form, Formik } from \"formik\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst modifierTargets = [\r\n  { label: \"Armor Class\", value: \"ac\" },\r\n  { label: \"Strength\", value: \"str\" },\r\n  { label: \"Dexterity\", value: \"dex\" },\r\n  { label: \"Constitution\", value: \"con\" },\r\n  { label: \"Intelligence\", value: \"int\" },\r\n  { label: \"Wisdom\", value: \"wis\" },\r\n  { label: \"Charisma\", value: \"chr\" },\r\n];\r\n\r\nconst itemTypes = [\r\n  { label: \"Armor\", value: \"armor\" },\r\n  { label: \"Melee Weapon\", value: \"melee\" },\r\n  { label: \"Ranged Weapon\", value: \"ranged\" },\r\n  { label: \"Misc.\", value: \"misc\" },\r\n];\r\n\r\nconst newItem = {\r\n  name: \"\",\r\n  type: \"\",\r\n  armorBonus: \"\",\r\n  maxDexBonus: \"\",\r\n  spellFailure: \"\",\r\n  modifiers: [],\r\n};\r\n\r\nexport default function Inventory(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const { inventory, setInventory, modifiers, setModifiers } = props;\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onAdd = (itemToAdd, modifiersToAdd) => {\r\n    if (!inventory.some(item => item.name === itemToAdd.name)) {\r\n      const newInventory = inventory.concat([itemToAdd]);\r\n      setInventory(newInventory);\r\n\r\n      const newModifiers = modifiers.concat(modifiersToAdd);\r\n      setModifiers(newModifiers);\r\n    }\r\n  };\r\n\r\n  const onUpdate = (itemToUpdate, modifiersToUpdate) => {\r\n    setInventory(\r\n      inventory\r\n        .filter(item => item.name !== itemToUpdate.name)\r\n        .concat([itemToUpdate]),\r\n    );\r\n    setModifiers(\r\n      modifiers\r\n        .filter(mod => mod.source !== itemToUpdate.name)\r\n        .concat(modifiersToUpdate),\r\n    );\r\n  };\r\n\r\n  const onDelete = name => {\r\n    const filteredInventory = inventory.filter(item => item.name !== name);\r\n    setInventory(filteredInventory);\r\n\r\n    const filteredModifiers = modifiers.filter(mod => mod.source !== name);\r\n    setModifiers(filteredModifiers);\r\n  };\r\n\r\n  return (\r\n    <section className=\"inventory\">\r\n      <h1>Inventory</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        {inventory.sort().map(item => (\r\n          <Item\r\n            key={item.name}\r\n            handleClose={handleClose}\r\n            onDelete={onDelete}\r\n            onAdd={onUpdate}\r\n            item={item}\r\n            modifiers={modifiers}\r\n          />\r\n        ))}\r\n      </div>\r\n      <Button onClick={handleOpen}>Add New Item</Button>\r\n      <ItemForm\r\n        initialValues={newItem}\r\n        onAdd={onAdd}\r\n        open={open}\r\n        handleOpen={handleOpen}\r\n        handleClose={handleClose}\r\n        modifiers={modifiers}\r\n        title=\"New Item\"\r\n      />\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { getStringNumber } from \"../utils\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    maxWidth: \"500px\",\r\n  },\r\n}));\r\n\r\nexport default function InfoTip(props) {\r\n  const classes = useStyles();\r\n  const { modifiers, children } = props;\r\n\r\n  const sum = modifiers\r\n    .map(modifier => modifier.value)\r\n    .reduce((prev, next) => prev + next);\r\n\r\n  const title = (\r\n    <div style={{ display: \"flex\" }}>\r\n      {modifiers.map((modifier, index) => (\r\n        <>\r\n          <div key={modifier.name} style={{ marginRight: \"0.5rem\" }}>\r\n            <div style={{ textAlign: \"center\", whiteSpace: \"nowrap\" }}>\r\n              {modifier.name}\r\n            </div>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              {getStringNumber(modifier.value)}\r\n            </div>\r\n          </div>\r\n          {index + 1 !== modifiers.length && (\r\n            <div\r\n              key={`plus${index}`}\r\n              style={{\r\n                margin: \"0 1rem\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              +\r\n            </div>\r\n          )}\r\n        </>\r\n      ))}\r\n      <div\r\n        key=\"equals\"\r\n        style={{\r\n          margin: \"0 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        =\r\n      </div>\r\n      <div\r\n        key=\"sum\"\r\n        style={{\r\n          margin: \"0 1rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {sum}\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Tooltip\r\n      classes={{ tooltip: classes.tooltip }}\r\n      title={title}\r\n      children={children}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Stat from \"./Stat\";\r\n\r\nconst Weapon = props => {\r\n  const {\r\n    attackBonus,\r\n    criticalRange,\r\n    damageBonus,\r\n    damageDie,\r\n    damageType,\r\n    name,\r\n  } = props;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        alignItems: \"center\",\r\n        border: \"1px solid lightgray\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"1rem\",\r\n        marginBottom: \"1rem\",\r\n      }}\r\n    >\r\n      <span>{name}</span>\r\n      <Stat label=\"Attack Bonus\" value={attackBonus} />\r\n      <Stat label=\"Damage Die\" value={damageDie} />\r\n      <Stat label=\"Critical Range\" value={criticalRange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weapon;\r\n","import React from \"react\";\r\nimport InfoTip from \"./InfoTip\";\r\nimport Stat from \"./Stat\";\r\nimport Weapon from \"./Weapon\";\r\n\r\nexport default function Offense(props) {\r\n  const { character } = props;\r\n  const { initiative, speed, cmb } = character;\r\n  return (\r\n    <section className=\"offense\">\r\n      <h1>Offense</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        <Stat label=\"Initiative\" value={initiative} />\r\n        <Stat label=\"Speed\" value={speed} />\r\n        <Stat label=\"CMB\" value={cmb} />\r\n      </div>\r\n      <h1>Attacks</h1>\r\n      <Weapon\r\n        attackBonus=\"+4\"\r\n        criticalRange=\"x2\"\r\n        damageBonus={1}\r\n        damageDie=\"1d3\"\r\n        damageType=\"Bludgeoning\"\r\n        name=\"Unarmed Strike\"\r\n      />\r\n      <Weapon\r\n        attackBonus=\"+10\"\r\n        criticalRange=\"19-20/x2\"\r\n        damageDie=\"1d8\"\r\n        damageBonus={1}\r\n        damageType=\"Slashing\"\r\n        name=\"Longsword +1\"\r\n      />\r\n    </section>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { Button, Container } from \"@material-ui/core\";\n\nimport \"./App.css\";\nimport ashData from \"./ash.json\";\nimport Character from \"./components/Character\";\nimport Defense from \"./components/Defense\";\nimport Inventory from \"./components/Inventory\";\nimport Offense from \"./components/Offense\";\nimport Portrait from \"./components/Portrait\";\nimport CharacterForm, { abilities } from \"./components/CharacterForm\";\n\nconst emptyCharacter = {\n  name: \"\",\n  race: \"\",\n  characterClass: \"\",\n  str: \"\",\n  dex: \"\",\n  con: \"\",\n  int: \"\",\n  wis: \"\",\n  chr: \"\",\n  hitPoints: \"\",\n  fortitude: \"\",\n  reflex: \"\",\n  will: \"\",\n  cmd: \"\",\n  initiative: \"\",\n  speed: \"\",\n  cmb: \"\",\n};\n\nconst loadLocalData = (key, emptyValue) => {\n  if (localStorage.getItem(key)) {\n    return JSON.parse(localStorage.getItem(key));\n  }\n  localStorage.setItem(key, JSON.stringify(emptyValue));\n  return emptyValue;\n};\n\nfunction App() {\n  const localCharacter = loadLocalData(\"character\", emptyCharacter);\n  const localInventory = loadLocalData(\"inventory\", []);\n  const localModifiers = loadLocalData(\"modifiers\", []);\n\n  const [character, setCharacter] = useState(localCharacter);\n  const [inventory, setInventory] = useState(localInventory);\n  const [modifiers, setModifiers] = useState(localModifiers);\n  const [edit, setEdit] = useState(false);\n\n  const handleEditToggle = () => {\n    setEdit(!edit);\n  };\n\n  const setAllCharacters = newCharacter => {\n    setCharacter(newCharacter);\n    localStorage.setItem(\"character\", JSON.stringify(newCharacter));\n  };\n\n  const setAllModifiers = newModifiers => {\n    setModifiers(newModifiers);\n    localStorage.setItem(\"modifiers\", JSON.stringify(newModifiers));\n  };\n\n  const setAllInventories = newInventory => {\n    setInventory(newInventory);\n    localStorage.setItem(\"inventory\", JSON.stringify(newInventory));\n  };\n\n  return (\n    <Container className=\"App\">\n      <main>\n        <header\n          style={{\n            display: \"flex\",\n            alignItems: \"baseline\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <h1>Character Sheet</h1>\n          <Button onClick={handleEditToggle} style={{ height: \"auto\" }}>\n            {edit ? \"Cancel\" : \"Edit Character\"}\n          </Button>\n        </header>\n        {edit ? (\n          <CharacterForm\n            character={character}\n            setCharacter={setAllCharacters}\n            setEdit={setEdit}\n          />\n        ) : (\n          <div>\n            <Character\n              character={character}\n              inventory={inventory}\n              modifiers={modifiers}\n            />\n            <Defense\n              character={character}\n              inventory={inventory}\n              modifiers={modifiers}\n            />\n            <Offense character={character} />\n            <Inventory\n              inventory={inventory}\n              setInventory={setAllInventories}\n              modifiers={modifiers}\n              setModifiers={setAllModifiers}\n            />\n          </div>\n        )}\n      </main>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}